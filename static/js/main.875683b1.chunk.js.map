{"version":3,"sources":["components/ContactForm/Style.module.css","components/UserMenu/style.module.css","components/Filter/style.module.css","components/ContactList/style.module.css","redux/actions.js","redux/operations.js","redux/reducers.js","redux/auth/auth-operations.jsx","redux/auth/auth-slice.jsx","redux/store.js","redux/auth/auth-selectors.jsx","components/PrivateRoute.jsx","components/PublicRoute.jsx","components/Navigation.jsx","img/big-smile.png","components/UserMenu/UserMenu.jsx","components/AuthNav.jsx","components/AppBar.jsx","views/HomeViews.jsx","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","views/Contacts.jsx","views/RegisterView.jsx","views/LoginViews.jsx","App.jsx","index.js"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","getContacts","createAsyncThunk","_","a","rejectWithValue","get","data","message","addContacts","contact","post","deleteContacts","contactId","delete","id","contactSlice","createSlice","name","initialState","loading","error","extraReducers","pending","state","action","fulfilled","payload","rejected","filter","filterReducer","createReducer","token","headers","common","Authorization","register","credentials","toast","logIn","logOut","fetchCurrentUser","thunkAPI","getState","persistedToken","auth","authSlice","user","email","isLoggedIn","isRefreshing","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","contacts","devTools","process","persistor","persistStore","getIsLoggedIn","getUserName","getIsRefreshing","PrivateRoute","Component","component","useSelector","to","PublicRoute","restricted","shouldRedirect","Navigation","className","navData","isActive","style","activeLink","homelink","UserMenu","dispatch","useDispatch","avatar","defaultAvatar","container","src","alt","width","height","userAvatar","userMenu","type","onClick","logOutButton","AuthNav","authlink","AppBar","header","HomeView","homeWrap","homeTitle","homeText","role","getContact","getFilteredContacts","createSelector","items","el","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","handleInputChange","event","currentTarget","value","onSubmit","evt","preventDefault","find","alert","form","form__header","form__title","pattern","title","required","onChange","form__input","form__button","ContactList","contactFilter","useEffect","contacts__list","map","contacts__item","contact__button","Filter","htmlFor","filter__title","autoComplete","e","target","toLocaleLowerCase","filter__input","Contacts","contacts__title","RegisterView","setEmail","password","setPassword","handleChange","registerWrap","registerTitle","registerText","trim","info","registerForm","registerLabel","registerInput","registerButton","LoginView","autoCorrect","App","path","element","HomePage","RegisterPage","redirectTo","LoginPage","ContactsPage","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.875683b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Style_form__3p0rA\",\"form__header\":\"Style_form__header__45PX6\",\"form__title\":\"Style_form__title__3k9-3\",\"form__input\":\"Style_form__input__1KcLY\",\"form__button\":\"Style_form__button__2o9Qi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__1xTtm\",\"container\":\"style_container__1jYgO\",\"authlink\":\"style_authlink__r-LM8\",\"homelink\":\"style_homelink__3FP0L\",\"activeLink\":\"style_activeLink__2wEze\",\"userMenu\":\"style_userMenu__D55bb\",\"userAvatar\":\"style_userAvatar__3w2km\",\"logOutButton\":\"style_logOutButton__3zMBu\",\"homeWrap\":\"style_homeWrap__3Jf50\",\"homeTitle\":\"style_homeTitle__u2W02\",\"homeText\":\"style_homeText__B0a8g\",\"registerWrap\":\"style_registerWrap__2ubbV\",\"registerForm\":\"style_registerForm__2I4tz\",\"registerTitle\":\"style_registerTitle__19sP7\",\"registerText\":\"style_registerText__2lcBo\",\"registerInput\":\"style_registerInput__wdyl0\",\"registerLabel\":\"style_registerLabel__2KBz4\",\"registerButton\":\"style_registerButton__2oPSe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__title\":\"style_filter__title__1en6j\",\"filter__input\":\"style_filter__input__3zrnY\",\"contacts__title\":\"style_contacts__title__pDn4t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__button\":\"style_contact__button__3QP-a\",\"contacts__list\":\"style_contacts__list__2n5EY\",\"contacts__item\":\"style_contacts__item__kmEvq\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const changeFilter = createAction('changeFilter');","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://619d60fa131c600017088edc.mockapi.io';\r\n\r\nexport const getContacts = createAsyncThunk(\r\n    'contacts/getContacts',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            const {data} = await axios.get('/contacts');\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    },\r\n);\r\nexport const addContacts = createAsyncThunk(\r\n    'contacts/addContacts',\r\n    async (contact, { rejectWithValue }) => {\r\n        try {\r\n            const { data } = await axios.post('/contacts', contact);\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    },\r\n);\r\nexport const deleteContacts = createAsyncThunk(\r\n    'contacts/deleteContacts',\r\n    async (contactId, { rejectWithValue }) => {\r\n        try {\r\n            const { data: { id } } = await axios.delete(`/contacts/${contactId}`);\r\n            return id;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n      }\r\n    },\r\n);","import { createReducer, createSlice } from \"@reduxjs/toolkit\";\r\nimport { changeFilter } from \"./actions\";\r\nimport { addContacts, deleteContacts, getContacts } from \"./operations\";\r\n\r\nconst contactSlice = createSlice({\r\n    name: 'contacts',\r\n    initialState: {\r\n        contact: [],\r\n        loading: false,\r\n        error: null,\r\n    },\r\n    extraReducers: {\r\n        [getContacts.pending]: (state, action) => ({\r\n            ...state, loading: true,\r\n        }),\r\n        [getContacts.fulfilled]: (state, action) => ({\r\n            ...state, contact: action.payload, loading: false,\r\n        }),\r\n        [getContacts.rejected]: (state, action) => ({\r\n            ...state, loading: false, error: action.payload,\r\n            \r\n        }),\r\n        [addContacts.pending]: (state, action) => {\r\n            return { ...state, loading: true, };\r\n        },\r\n        [addContacts.fulfilled]: (state, action) => {\r\n            return {\r\n                ...state, contact: [...state.contact, action.payload],\r\n                loading: false,\r\n            };\r\n        },\r\n        [addContacts.rejected]: (state, action) => {\r\n            return {\r\n                ...state, loading: false, error: action.payload,\r\n            };\r\n        },\r\n        [deleteContacts.pending]: (state, action) => ({\r\n            ...state, loading: true,\r\n        }),\r\n        [deleteContacts.fulfilled]: (state, action) => ({\r\n            ...state, contact: state.contact.filter(({ id }) => id !== action.payload),\r\n            loading: false,\r\n        }),\r\n        [deleteContacts.rejected]: (state, action) => ({\r\n            ...state, loading: false, error: action.payload,\r\n        }),\r\n    }\r\n});\r\n\r\n\r\nexport default contactSlice.reducer;\r\n\r\nexport const filterReducer = createReducer('', {\r\n    \r\n    [changeFilter]: (_, action) => action.payload,\r\n    \r\n});","import axios from 'axios';\r\nimport { createAsyncThunk} from '@reduxjs/toolkit';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL = `https://connections-api.herokuapp.com`;\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nexport const register = createAsyncThunk('auth/register', async (credentials, {rejectWithValue}) => {\r\n    try {\r\n        const { data } = await axios.post('/users/signup', credentials);\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (error) {\r\n        \r\n        return rejectWithValue(toast.error(`Something went wrong! Please, try one more time`));\r\n        \r\n    }\r\n});\r\n\r\nexport const logIn = createAsyncThunk('auth/login', async( credentials, {rejectWithValue}) => {\r\n    try {\r\n        const { data } = await axios.post('/users/login', credentials);\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (error) {\r\n        return rejectWithValue(toast.error(`Wrong email address or password!`));         \r\n        \r\n    }\r\n});\r\n\r\nexport const logOut = createAsyncThunk('auth/logout', async () => {\r\n    try {\r\n        await axios.post('/user/logout');\r\n        token.unset();\r\n    } catch (error) {\r\n        \r\n        \r\n    }\r\n});\r\nexport const fetchCurrentUser = createAsyncThunk('auth/refresh', async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState()\r\n    const persistedToken = state.auth.token;\r\n    if (persistedToken === null) {\r\n        return thunkAPI.rejectWithValue();\r\n    }\r\n    token.set(persistedToken);\r\n    try {\r\n        const { data } = await axios.get('/users/current');\r\n        return data;\r\n    } catch (error){\r\n        return thunkAPI.rejectWithValue();\r\n    }\r\n    \r\n},\r\n);","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {register, logIn, logOut, fetchCurrentUser} from './auth-operations';\r\n\r\nconst initialState = {\r\n    user: {name:null, email:null},\r\n    token: null,\r\n    isLoggedIn: false,\r\n    isRefreshing: false,\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    extraReducers: {\r\n        [register.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [logIn.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [logOut.fulfilled](state, _) {\r\n            state.user = { name: null, email: null };\r\n            state.token = null;\r\n            state.isLoggedIn = false;\r\n        },\r\n        [fetchCurrentUser.pending](state) {\r\n            state.isRefreshing = true;\r\n        },\r\n        [fetchCurrentUser.fulfilled](state, action) {\r\n            state.user = action.payload;\r\n            state.isLoggedIn = true;\r\n            state.isRefreshing = false;\r\n        },\r\n        [fetchCurrentUser.rejected](state) {\r\n            state.isRefreshing = false;\r\n        },\r\n    },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n} from 'redux-persist';\r\nimport contactSlice, { filterReducer } from \"./reducers\";\r\nimport authSlice from './auth/auth-slice';\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n}),\r\n];\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth:persistReducer(authPersistConfig, authSlice),\r\n        contacts: contactSlice,\r\n        filter:filterReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n\r\n\r\nexport const persistor=persistStore(store);","export const getIsLoggedIn = (state) => state.auth.isLoggedIn;\r\nexport const getUserName = (state) => state.auth.user.name;\r\nexport const getIsRefreshing = (state) => state.auth.isRefreshing;\r\n\r\nconst authSelectors = {\r\n    getIsLoggedIn,\r\n    getUserName,\r\n    getIsRefreshing,\r\n};\r\n\r\nexport default authSelectors;\r\n","\r\nimport { useSelector } from \"react-redux\";\r\nimport {Navigate } from 'react-router';\r\nimport {getIsLoggedIn} from '../redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({component: Component, }) {\r\n    const isLoggedIn = useSelector(getIsLoggedIn);\r\n    return (\r\n        <>\r\n            {isLoggedIn ? <Component/> : <Navigate to=\"/\" />}\r\n        </>\r\n    );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router';\r\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({component:Component, restricted=false }) {\r\n    const isLoggedIn = useSelector(getIsLoggedIn);\r\n    const shouldRedirect = isLoggedIn && restricted;\r\n    return (\r\n        <>\r\n            {shouldRedirect ? <Navigate to={\"/contacts\" || \"/\"}/> : <Component/>}\r\n        </>);\r\n    \r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors';\r\nimport style from '../components/UserMenu/style.module.css'\r\n\r\n\r\nconst Navigation = () => {\r\n    const isLoggedIn = useSelector(getIsLoggedIn);\r\n\r\n    return (        \r\n        <nav>            \r\n            <NavLink to='/' className={(navData)=> navData.isActive ? style.activeLink : style.homelink}>Home</NavLink>\r\n            {isLoggedIn && (<NavLink to=\"/contacts\" className={(navData)=> navData.isActive ? style.activeLink : style.homelink}>Phone-book</NavLink>)}            \r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/big-smile.ac442209.png\";","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserName } from \"../../redux/auth/auth-selectors\";\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport defaultAvatar from \"../../img/big-smile.png\";\r\nimport style from '../../components/UserMenu/style.module.css'\r\n\r\nexport default function UserMenu() {\r\n    const dispatch = useDispatch();\r\n    const name = useSelector(getUserName);\r\n    const avatar = defaultAvatar;\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <img src={avatar} alt=\"\" width='40' height=\"40\" className={style.userAvatar }/>\r\n            <span className={style.userMenu}>Welcome, {name}</span>\r\n            <button type=\"button\" onClick={() => dispatch(logOut())} className={style.logOutButton}>Log out</button>\r\n    </div>\r\n)\r\n    \r\n};\r\n","import { NavLink } from 'react-router-dom';\r\nimport style from '../components/UserMenu/style.module.css'\r\nexport default function AuthNav() {\r\n    return (\r\n        <div className={style.container}>\r\n            <NavLink to=\"/register\" className={style.authlink} >Get Started</NavLink>\r\n            <NavLink to='/login' className={style.authlink}>Log in</NavLink>\r\n        </div>\r\n    )\r\n}","import { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu/UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors';\r\nimport style from '../components/UserMenu/style.module.css'\r\n\r\nexport default function AppBar() {\r\n    const isLoggedIn = useSelector(getIsLoggedIn);\r\n    return (\r\n        <header className={style.header}>\r\n            <Navigation />\r\n            {isLoggedIn?<UserMenu /> : <AuthNav />}          \r\n            \r\n        </header>\r\n    );\r\n    \r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors';\r\nimport style from '../components/UserMenu/style.module.css'\r\n\r\nconst HomeView = () => {\r\n    const isLoggedIn = useSelector(getIsLoggedIn);\r\n    return (<div className={style.homeWrap}>\r\n        <h1 className={style.homeTitle}>Welcome to the Phone-book app!</h1>\r\n        <h2 className={style.homeText}>You would't loose your contacts anymore </h2>\r\n        {!isLoggedIn && (<>\r\n                <span role=\"img\" aria-label=\"Greeting icon\"></span>\r\n                <p className={style.homeText}>Please, fill in the <b>Registration form</b>  or <b>Log in</b> to have an access to the app </p>\r\n                </>\r\n        )\r\n        }\r\n        </div>\r\n    );\r\n};\r\nexport default HomeView;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContact = state => state.contacts.contact;\r\nexport const getFilter = state => state.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n    [getContact, getFilter],\r\n    (items, filter) => items.filter((el) => el.name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContacts } from '../../redux/operations';\r\nimport { getContact } from '../../redux/selectors';\r\nimport style from './Style.module.css';\r\n\r\n\r\n\r\nexport default function ContactForm() {\r\n    const contacts = useSelector(getContact);\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    \r\n    const handleInputChange = (event) => {\r\n        if (event.currentTarget.name === 'name') {\r\n            setName(event.currentTarget.value);\r\n        } else if (event.currentTarget.name === 'number') {\r\n            setNumber(event.currentTarget.value);\r\n    }\r\n        \r\n    };\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\r\n      alert(`${name} is already in contacts.`);\r\n    } else {\r\n      dispatch(addContacts({ name, number }));\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    }\r\n  };\r\n\r\n     \r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}\r\n                className={style.form}>\r\n                <h1 className={style.form__header}>Phone-book</h1>\r\n                <label className={style.form__title}>Name\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={handleInputChange}\r\n                        \r\n                        className={style.form__input}\r\n                        \r\n                    />\r\n                </label>\r\n                <label className={style.form__title}>Number\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={number}\r\n                        onChange={handleInputChange}                        \r\n                        className={style.form__input}\r\n                    />\r\n                </label>\r\n                <button className={style.form__button}>Add contact</button>\r\n            </form>\r\n        </>\r\n    );\r\n    \r\n}\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport { getContacts, deleteContacts } from '../../redux/operations';\r\nimport { getFilteredContacts } from \"../../redux/selectors\";\r\nimport style from './style.module.css';\r\n\r\n\r\n export default function  ContactList () {\r\n \r\n   const dispatch = useDispatch();\r\n   const contactFilter = useSelector(getFilteredContacts);\r\n  \r\n   useEffect(() => {\r\n     dispatch(getContacts());\r\n     \r\n   }, [dispatch]);\r\n\r\n    return (\r\n      <ul className={style.contacts__list} >\r\n        {contactFilter.map((el) => (\r\n          <li key={el.id} className={style.contacts__item}>\r\n            {el.name} : {el.number}\r\n           <button\r\n              type=\"button\"\r\n              id={el.id}\r\n              onClick={() => {\r\n                dispatch(deleteContacts(el.id));\r\n                dispatch(getContacts());\r\n              }}\r\n                    className={style.contact__button}\r\n            >\r\n              Delete\r\n            </button>\r\n            </li>            \r\n        ))}\r\n            \r\n        </ul>\r\n         \r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/actions';\r\nimport style from './style.module.css';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  \r\n    return (\r\n      <>\r\n        <label htmlFor=\"search\" className={style.filter__title}>\r\n          Find contacts by name\r\n        \r\n        <input\r\n          \r\n                    autoComplete=\"off\"\r\n                    id=\"search\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]\"\r\n                    onChange={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(changeFilter(e.target.value.toLocaleLowerCase()));\r\n                    }}\r\n                    className={style.filter__input}\r\n            ></input>\r\n            </label>\r\n      </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import style from '../components/Filter/style.module.css';\r\nimport ContactForm from \"../components/ContactForm/ContactForm\";\r\nimport ContactList  from '../components/ContactList/ContactList';\r\nimport Filter from \"../components/Filter/Filter\";\r\n\r\n\r\nexport default function Contacts() {\r\n    return (\r\n        <>\r\n            <ContactForm />\r\n            <h2 className={style.contacts__title}>Contacts</h2>\r\n            <Filter />\r\n            <ContactList />\r\n        </>\r\n    );\r\n    \r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from 'react-toastify';\r\nimport { register } from '../redux/auth/auth-operations';\r\nimport style from '../components/UserMenu/style.module.css';\r\n\r\n\r\n\r\nexport default function RegisterView() {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        switch (name) {\r\n            case 'name':\r\n                return setName(value);\r\n            case 'email':\r\n                return setEmail(value);\r\n            case 'password':\r\n                return setPassword(value);\r\n            default: return;\r\n        }\r\n        \r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (name.trim() === '' || email.trim() === '' || password.trim() === '') {\r\n            toast.info('Please, fill in all the fields!')\r\n            return\r\n        }\r\n        dispatch(register({ name, email, password }));\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n    };\r\n    \r\n\r\n    return (\r\n        \r\n        <div className={style.registerWrap}>\r\n            <h1 className={style.registerTitle}>Register</h1>\r\n            <p className={style.registerText}>online phone-book</p>\r\n            \r\n            <form onSubmit={handleSubmit}\r\n                autoComplete=\"off\"\r\n                className={style.registerForm}>\r\n                <label className={style.registerLabel}>Name                \r\n                    <input className={style.registerInput}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={handleChange} />\r\n               </label>\r\n                <label className={style.registerLabel}>Email\r\n                    <input className={style.registerInput}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={handleChange} />\r\n                </label>\r\n                <label className={style.registerLabel}>Password\r\n                    <input className={style.registerInput}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={handleChange} />\r\n                </label>\r\n                <button type=\"submit\" className={style.registerButton}>Register</button>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    \r\n};\r\n","import { useState } from \"react\";\r\nimport { useDispatch} from 'react-redux';\r\nimport { toast } from \"react-toastify\";\r\nimport { logIn } from '../redux/auth/auth-operations';\r\nimport style from '../components/UserMenu/style.module.css';\r\n\r\n\r\nexport default function LoginView() {\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const handleChange = ({target:{name, value}}) => {\r\n        switch (name) {\r\n            case 'email': setEmail(value);\r\n                break;\r\n            case 'password': setPassword(value);\r\n                break;\r\n            \r\n            default: return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (email.trim() === '' || password.trim() === ''){\r\n            toast.info('Please, fill in all the fields correctly!')\r\n            return\r\n        }\r\n        dispatch(logIn({ email, password }));\r\n        setEmail('');\r\n        setPassword('');\r\n    };\r\n\r\n    return (\r\n        <div className={style.registerWrap}>\r\n            <h1 className={style.registerTitle}>Login</h1>\r\n            <p className={style.registerText}>online phone-book</p>\r\n\r\n            \r\n            <form onSubmit={handleSubmit}\r\n                autoCorrect=\"off\"\r\n            className={style.registerForm}>\r\n                <label className={style.registerLabel}>Email\r\n                    <input className={style.registerInput}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={handleChange} />\r\n                </label>\r\n                <label className={style.registerLabel}>Password\r\n                    <input className={style.registerInput}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <button type=\"submit\" className={style.registerButton}>Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n","\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport AppBar from './components/AppBar';\nimport { fetchCurrentUser } from './redux/auth/auth-operations';\nimport { getIsRefreshing } from './redux/auth/auth-selectors';\nimport HomePage from './views/HomeViews';\nimport ContactsPage from './views/Contacts';\nimport RegisterPage from './views/RegisterView';\nimport LoginPage from './views/LoginViews';\n\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isRefreshing = useSelector(getIsRefreshing);\n\n  useEffect(() => {\n\n    dispatch(fetchCurrentUser());\n\n  }, [dispatch]);\n\n\n\n  return (\n  !isRefreshing && (\n  <div>\n    <AppBar />\n        <Routes>\n          <Route path=\"/\" element={<PublicRoute component={HomePage} />}\n          />\n          <Route path=\"/register\"   element={<PublicRoute  restricted component={RegisterPage} />}\n          />\n          <Route path=\"/login\"  element={<PublicRoute redirectTo=\"/contacts\" restricted component={LoginPage} />}\n          />\n          <Route path=\"/contacts\" element={<PrivateRoute redirectTo=\"/login\" component={ContactsPage} />}\n          />\n        </Routes>\n        <ToastContainer autoClose={3000} />\n      </div>)\n    \n    );\n\n  \n}\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport {store, persistor } from \"./redux/store\";\nimport App from \"./App\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading = {null} persistor={persistor}>\n      <BrowserRouter>\n    <App />\n      </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n\n"],"sourceRoot":""}